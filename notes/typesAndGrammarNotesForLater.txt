----------
TYPES
----------


typeof null returns 'object'. bug that will never be fixed

  // must do
  var something = null
  (!something && typeof something === 'object') //true



undefined vs undeclared

Safety check to avoid a ReferenceError for undeclared

  // will error
  if (DEBUG) console.log('Debugging started.')
  // safe existence check
  if (typeof DEBUG !== 'undefined') console.log('Debugging started.')
  // feature check for API
  if (typeof coolFeature === 'undefined') coolFeature = function() {/*...*/}
  // or check global
  if (!window.coolFeature) coolFeature = function() {/*...*/}




----------
VALUES
----------

Arrays

delete key will just create undefined placeholder. arr.length does not change

var arr = [1,2,3,4,5]
arr.length // 5
delete arr[2]
arr // [1,2,,4,5]
arr.length // 5


Because arrays are just objects you can add string keys which do not count towards the length either. They get appended to end of array.

var arr = []
arr.['name'] = 'Seth'
arr.length // 0

If you use a number it will assume an index. Be careful!

var arr = []
arr['5'] = 'testing'
arr // [ , , , , , 'testing']

SAVE ARRAYS FOR NUMERICALLY INDEXED POSITIONS


Strings




